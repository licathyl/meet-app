{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","images/logo.png","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","show","handleButton","setState","prevState","event","this","props","className","summary","start","dateTime","timeZone","location","Button","variant","onClick","href","htmlLink","rel","target","description","Component","EventList","events","Row","Col","md","map","id","Alert","getStyle","color","height","marginTop","style","text","InfoAlert","ErrorAlert","WarningAlert","CitySearch","query","suggestions","showSuggestions","infoText","handleInputChanged","value","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","type","placeholder","onChange","onFocus","display","NumberOfEvents","numberOfEvents","updateNumberOfEvents","e","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","window","startsWith","done","navigator","onLine","data","localStorage","getItem","JSON","parse","getAccessToken","token","removeQuery","url","axios","get","setItem","stringify","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","currentLocation","locationEvents","slice","eventCount","mounted","src","logo","alt","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"2PAGMA,E,4MACJC,MAAQ,CACNC,MAAM,G,EAGRC,aAAe,WACb,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAAEH,MAAOG,EAAUH,U,4CAGnD,WAAU,IAAD,OACHI,EAAQC,KAAKC,MAAMF,MAEvB,OACE,sBAAKG,UAAU,QAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BH,EAAMI,UACpC,oBAAGD,UAAU,YAAb,UAA0BH,EAAMK,MAAMC,SAAtC,IAAiDN,EAAMK,MAAME,YAC7D,oBAAGJ,UAAU,gBAAb,cAA+BH,EAAMI,QAArC,MAAiDJ,EAAMQ,aAElC,IAApBP,KAAKN,MAAMC,MACV,cAACa,EAAA,EAAD,CAAQC,QAAQ,UAAUP,UAAU,cAAcQ,QAAS,kBAAM,EAAKd,gBAAtE,2BAKmB,IAApBI,KAAKN,MAAMC,MACV,sBAAKO,UAAU,eAAf,UACE,kDACA,mBAAGS,KAAMZ,EAAMa,SAAUC,IAAI,aAAaC,OAAO,SAAjD,4CAGA,mBAAGZ,UAAU,mBAAb,SAAiCH,EAAMgB,cACvC,cAACP,EAAA,EAAD,CAAQC,QAAQ,UAAUP,UAAU,cAAcQ,QAAS,kBAAM,EAAKd,gBAAtE,oC,GA/BQoB,aAyCLvB,I,gBCxCTwB,E,4JACJ,WACE,IAAQC,EAAWlB,KAAKC,MAAhBiB,OACR,OACE,cAACC,EAAA,EAAD,CAAKjB,UAAU,qCAAf,SACE,cAACkB,EAAA,EAAD,CAAKC,GAAI,GAAT,SACE,oBAAInB,UAAU,YAAd,SACGgB,EAAOI,KAAI,SAACvB,GAAD,OACV,oBAAIG,UAAU,YAAd,SACE,cAAC,EAAD,CAAOH,MAAOA,KADeA,EAAMwB,iB,GAR3BP,aAmBTC,ICrBTO,E,kDACJ,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IAMRwB,SAAW,WACT,MAAO,CACLC,MAAO,EAAKA,MACZC,OAAQ,EAAKA,OACbC,UAAW,EAAKA,YATlB,EAAKF,MAAQ,KACb,EAAKC,OAAS,KACd,EAAKC,UAAY,KAJA,E,0CAenB,WACE,OACE,qBAAK1B,UAAU,QAAf,SACE,mBAAG2B,MAAO7B,KAAKyB,WAAf,SAA4BzB,KAAKC,MAAM6B,a,GAnB3Bd,aAyBde,E,kDACJ,WAAY9B,GAAQ,IAAD,8BACjB,cAAMA,IACDyB,MAAQ,OACb,EAAKC,OAAS,OACd,EAAKC,UAAY,IAJA,E,UADGJ,GASlBQ,E,kDACJ,WAAY/B,GAAQ,IAAD,8BACjB,cAAMA,IACDyB,MAAQ,MAFI,E,UADIF,GAOnBS,E,kDACJ,WAAYhC,GAAQ,IAAD,8BACjB,cAAMA,IACDyB,MAAQ,SAFI,E,UADMF,GCxCrBU,E,4MACJxC,MAAQ,CACNyC,MAAO,GACPC,YAAa,GACbC,iBAAiB,EACjBC,SAAU,I,EAGZC,mBAAqB,SAACxC,GACpB,IAAMyC,EAAQzC,EAAMe,OAAO0B,MAC3B,EAAK3C,SAAS,CAACwC,iBAAgB,IAC/B,IAAMD,EAAc,EAAKnC,MAAMwC,UAAUC,QAAO,SAACnC,GAC/C,OAAOA,EAASoC,cAAcC,QAAQJ,EAAMG,gBAAkB,KAEhE,GAA2B,IAAvBP,EAAYS,OAMd,OAAO,EAAKhD,SAAS,CACnBsC,MAAOK,EACPJ,cACAE,SAAU,KARZ,EAAKzC,SAAS,CACZsC,MAAOK,EACPF,SAAU,2E,EAWhBQ,kBAAoB,SAACC,GACnB,EAAKlD,SAAS,CACZsC,MAAOY,EACPV,iBAAiB,IAGnB,EAAKpC,MAAM+C,aAAaD,I,4CAG1B,WAAU,IAAD,OACP,OACE,sBAAK7C,UAAU,aAAf,UACE,cAAC,EAAD,CAAW4B,KAAM9B,KAAKN,MAAM4C,WAC5B,uDACE,uBACEW,KAAK,OACL/C,UAAU,OACVgD,YAAY,uBACZV,MAAOxC,KAAKN,MAAMyC,MAClBgB,SAAUnD,KAAKuC,mBACfa,QAAS,WAAQ,EAAKvD,SAAS,CAAEwC,iBAAiB,UAGtD,qBAAInC,UAAU,cAAc2B,MAAO7B,KAAKN,MAAM2C,gBAAkB,GAAI,CAAEgB,QAAS,QAA/E,UACGrD,KAAKN,MAAM0C,YAAYd,KAAI,SAACyB,GAAD,OAC1B,oBAEErC,QAAS,kBAAM,EAAKoC,kBAAkBC,IAFxC,SAGEA,GAFKA,MAIT,oBAAIrC,QAAS,kBAAM,EAAKoC,kBAAkB,QAA1C,SACE,2D,GA3Da9B,aAmEVkB,ICnEToB,E,4MACJ5D,MAAQ,CACN6D,eAAgB,GAChBjB,SAAU,I,EAGZC,mBAAqB,SAACxC,GACpB,IAAMyC,EAAQzC,EAAMe,OAAO0B,MACvBA,EAAQ,GAAKA,EAAQ,GACvB,EAAK3C,SAAS,CACZ0D,eAAgB,GAChBjB,SAAU,2CAGZ,EAAKzC,SAAS,CACZ0D,eAAgBf,EAChBF,SAAU,KAGd,EAAKrC,MAAMuD,qBAAqBzD,EAAMe,OAAO0B,Q,4CAG/C,WAAU,IAAD,OACP,OACE,sBAAKtC,UAAU,iBAAf,UACC,sDACG,uBACE+C,KAAK,OACL/C,UAAU,eACVsC,MAAOxC,KAAKN,MAAM6D,eAClBJ,SAAU,SAACM,GAAD,OAAO,EAAKlB,mBAAmBkB,SAG7C,cAAC,EAAD,CAAYvD,UAAU,aAAa4B,KAAM9B,KAAKN,MAAM4C,kB,GAjC/BtB,aAuCdsC,I,gCC1CTI,EAAW,CACf,CACE,KAAQ,iBACR,KAAQ,qBACR,GAAM,8CACN,OAAU,YACV,SAAY,oJACZ,QAAW,2BACX,QAAW,2BACX,QAAW,mBACX,YAAe,uWACf,SAAY,aACZ,QAAW,CACV,MAAS,oCACT,MAAQ,GAET,UAAa,CACZ,MAAS,oCACT,MAAQ,GAET,MAAS,CACR,SAAY,4BACZ,SAAY,iBAEb,IAAO,CACN,SAAY,4BACZ,SAAY,iBAEb,iBAAoB,6BACpB,kBAAqB,CACpB,SAAY,4BACZ,SAAY,iBAEb,QAAW,wCACX,SAAY,EACZ,UAAa,CACZ,YAAc,GAEf,UAAa,WAEd,CACC,KAAQ,iBACR,KAAQ,qBACR,GAAM,8CACN,OAAU,YACV,SAAY,oJACZ,QAAW,2BACX,QAAW,2BACX,QAAW,eACX,YAAe,mSACf,SAAY,kBACZ,QAAW,CACV,MAAS,oCACT,MAAQ,GAET,UAAa,CACZ,MAAS,oCACT,MAAQ,GAET,MAAS,CACR,SAAY,4BACZ,SAAY,iBAEb,IAAO,CACN,SAAY,4BACZ,SAAY,iBAEb,iBAAoB,6BACpB,kBAAqB,CACpB,SAAY,4BACZ,SAAY,iBAEb,QAAW,wCACX,SAAY,EACZ,UAAa,CACZ,YAAc,GAEf,UAAa,Y,kCCnEJC,EAAmB,SAACzC,GAC/B,IAAIyC,EAAmBzC,EAAOI,KAAI,SAACvB,GAAD,OAAWA,EAAMQ,YAEnD,OADa,YAAO,IAAIqD,IAAID,KAIxBE,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACIC,MAAM,+DAAD,OACuCF,IAE9DG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMF,UALT,cACXG,EADW,yBAOVA,GAPU,2CAAH,sDAUHC,EAAS,uCAAG,oCAAAR,EAAA,yDACvBS,IAAUpE,SAENqE,OAAOlE,SAASI,KAAK+D,WAAW,oBAHb,uBAIrBF,IAAUG,OAJW,kBAKdjB,GALc,UAQlBkB,UAAUC,OARQ,uBASfC,EAAOC,aAAaC,QAAQ,cAClCR,IAAUG,OAVW,kBAWdG,EAAKG,KAAKC,MAAMJ,GAAM5D,OAAO,IAXf,wBAcHiE,IAdG,aAcjBC,EAdiB,gCAiBrBC,IACMC,EAlBe,uFAkBuEF,GAlBvE,UAmBAG,IAAMC,IAAIF,GAnBV,eAmBfhB,EAnBe,QAoBVQ,OACLrC,EAAYkB,EAAiBW,EAAOQ,KAAK5D,QAC7C6D,aAAaU,QAAQ,aAAcR,KAAKS,UAAUpB,EAAOQ,OACzDC,aAAaU,QAAQ,YAAaR,KAAKS,UAAUjD,KAEnD+B,IAAUG,OAzBW,kBA0BdL,EAAOQ,KAAK5D,QA1BE,4CAAH,qDA8BhBmE,EAAc,WAClB,GAAIZ,OAAOkB,QAAQC,WAAanB,OAAOlE,SAASsF,SAAU,CACxD,IAAIC,EACFrB,OAAOlE,SAASwF,SAChB,KACAtB,OAAOlE,SAASyF,KAChBvB,OAAOlE,SAASsF,SAClBpB,OAAOkB,QAAQC,UAAU,GAAI,GAAIE,QAEjCA,EAASrB,OAAOlE,SAASwF,SAAW,KAAOtB,OAAOlE,SAASyF,KAC3DvB,OAAOkB,QAAQC,UAAU,GAAI,GAAIE,IAI/BG,EAAQ,uCAAG,WAAOC,GAAP,mBAAAnC,EAAA,6DACToC,EAAaC,mBAAmBF,GADvB,SAEgBlC,MAAM,2EAAD,OACyCmC,IAE1ElC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZC,OAAM,SAACC,GAAD,OAAWA,KARL,wBAEPgC,EAFO,EAEPA,eAQQtB,aAAaU,QAAQ,eAAgBY,GAVtC,kBAYRA,GAZQ,2CAAH,sDAeDlB,EAAc,uCAAG,sCAAApB,EAAA,yDACtBD,EAAciB,aAAaC,QAAQ,gBADb,KAETlB,GAFS,qCAEaD,EAAWC,GAFxB,6BAEtBwC,EAFsB,KAIvBxC,IAAewC,EAAWjC,MAJH,kCAKpBU,aAAawB,WAAW,gBALJ,eAMpBC,EAAe,IAAIC,gBAAgBhC,OAAOlE,SAASmG,QAN/B,UAOPF,EAAahB,IAAI,QAPV,WAOpBU,EAPoB,yCASFX,IAAMC,IAAI,kFATR,eASlBmB,EATkB,OAUhBC,EAAYD,EAAQ7B,KAApB8B,QAVgB,kBAWhBnC,OAAOlE,SAASI,KAAOiG,GAXP,iCAanBV,GAAQD,EAASC,IAbE,iCAerBpC,GAfqB,4CAAH,qDCrFZ,MAA0B,iCCWnC+C,G,wNACJnH,MAAQ,CACNwB,OAAQ,GACRuB,UAAW,GACXqE,gBAAiB,MACjBvD,eAAgB,GAChBjB,SAAU,I,EA4BZU,aAAe,SAACzC,GACdgE,IAAYN,MAAK,SAAC/C,GAChB,IAAI6F,EACW,QAAbxG,EACEW,EACAA,EAAOwB,QAAO,SAAC3C,GAAD,OAAWA,EAAMQ,WAAaA,KACxCgD,EAAmB,EAAK7D,MAAxB6D,eACR,EAAK1D,SAAS,CACZqB,OAAQ6F,EAAeC,MAAM,EAAGzD,S,EAKtCC,qBAAuB,SAACyD,GACtB,IAAQH,EAAoB,EAAKpH,MAAzBoH,gBACR,EAAKjH,SAAS,CACZ0D,eAAgB0D,IAElB,EAAKjE,aAAa8D,EAAiBG,I,uDA3CrC,WAAqB,IAAD,OAClBjH,KAAKkH,SAAU,EACf3C,IAAYN,MAAK,SAAC/C,GACZ,EAAKgG,SACP,EAAKrH,SAAS,CACVqB,OAAQA,EAAO8F,MAAM,EAAG,EAAKtH,MAAM6D,gBACnCd,UAAWkB,EAAiBzC,KAG7B0D,UAAUC,OAKb,EAAKhF,SAAS,CACZyC,SAAU,KALZ,EAAKzC,SAAS,CACZyC,SAAU,sF,kCAUlB,WACEtC,KAAKkH,SAAU,I,oBAwBjB,WACE,OACE,sBAAKhH,UAAU,MAAf,UACE,qBAAKiH,IAAKC,EAAMlH,UAAU,OAAOmH,IAAI,yCACrC,cAAC,EAAD,CAAcnH,UAAU,eAAe4B,KAAM9B,KAAKN,MAAM4C,WACxD,cAAC,EAAD,CAAYG,UAAWzC,KAAKN,MAAM+C,UAAWO,aAAchD,KAAKgD,eAChE,cAAC,EAAD,CAAgBO,eAAgBvD,KAAKN,MAAM6D,eAAgBC,qBAAsBxD,KAAKwD,uBACtF,cAAC,EAAD,CAAWtC,OAAQlB,KAAKN,MAAMwB,gB,GA9DpBF,cAoEH6F,ICnETS,EAAcC,QACW,cAA7B9C,OAAOlE,SAASiH,UAEe,UAA7B/C,OAAOlE,SAASiH,UAEhB/C,OAAOlE,SAASiH,SAASC,MAAM,2DAqCnC,SAASC,EAAgBC,EAAOC,GAC9BhD,UAAUiD,cACPC,SAASH,GACT1D,MAAK,SAAC8D,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvI,QACfkF,UAAUiD,cAAcO,YAI1BC,QAAQC,IACN,+GAKEV,GAAUA,EAAOW,UACnBX,EAAOW,SAASR,KAMlBM,QAAQC,IAAI,sCAGRV,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUT,WAO5B3D,OAAM,SAACC,GACNgE,QAAQhE,MAAM,4CAA6CA,MC9FjE,IAYeoE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB1E,MAAK,YAAkD,IAA/C2E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,OAAc,oCAAoCC,UAElDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFMnB,SAAkB3B,GACvB,GAA6C,kBAAmBhD,UAAW,CAGzE,GADkB,IAAI4E,IAAIC,YAAwBhF,OAAOlE,SAASI,MACpD+I,SAAWjF,OAAOlE,SAASmJ,OAIvC,OAGFjF,OAAOkF,iBAAiB,QAAQ,WAC9B,IAAMhC,EAAK,UAAM8B,YAAN,sBAEPnC,IAgEV,SAAiCK,EAAOC,GAEtC5D,MAAM2D,EAAO,CACXiC,QAAS,CAAE,iBAAkB,YAE5B3F,MAAK,SAAC4F,GAEL,IAAMC,EAAcD,EAASD,QAAQpE,IAAI,gBAEnB,MAApBqE,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYlH,QAAQ,cAG5CgC,UAAUiD,cAAcmC,MAAM/F,MAAK,SAAC8D,GAClCA,EAAakC,aAAahG,MAAK,WAC7BQ,OAAOlE,SAAS2J,eAKpBxC,EAAgBC,EAAOC,MAG1BxD,OAAM,WACLiE,QAAQC,IAAI,oEAtFV6B,CAAwBxC,EAAOC,GAI/BhD,UAAUiD,cAAcmC,MAAM/F,MAAK,WACjCoE,QAAQC,IACN,+GAMJZ,EAAgBC,EAAOC,OE5B/BwC,GAKA3B,M","file":"static/js/main.de849064.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button } from 'react-bootstrap';\n\nclass Event extends Component {\n  state = {\n    show: false,\n  }\n\n  handleButton = () => {\n    this.setState((prevState) => ({ show: !prevState.show }));\n  };\n\n  render() {\n    let event = this.props.event;\n    \n    return (\n      <div className='event'>\n        <h2 className='eventSummary'>{event.summary}</h2>\n        <p className='eventDate'>{event.start.dateTime} {event.start.timeZone}</p> \n        <p className='eventLocation'>@{event.summary} | {event.location}</p>\n\n        {this.state.show === false && (\n          <Button variant=\"primary\" className='showDetails' onClick={() => this.handleButton()}>\n            Show Details\n          </Button>\n        )}\n\n        {this.state.show === true && (\n          <div className='EventDetails'>\n            <h4>About the event:</h4>\n            <a href={event.htmlLink} rel='noreferrer' target='_blank'>\n              See details on Google Calendar\n            </a> \n            <p className='eventDescription'>{event.description}</p>\n            <Button variant=\"primary\" className='hideDetails' onClick={() => this.handleButton()}>\n              Hide Details\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","import React, { Component } from \"react\";\nimport Event from \"./Event\";\nimport { Row, Col } from 'react-bootstrap';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <Row className=\"d-flex justify-content-center mt-3\">\n        <Col md={12}>\n          <ul className=\"EventList\">\n            {events.map((event) => (\n              <li className=\"EventItem\" key={event.id}>\n                <Event event={event} />\n              </li>\n            ))}\n          </ul>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default EventList;\n","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n    this.height = null;\n    this.marginTop = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n      height: this.height,\n      marginTop: this.marginTop\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n    this.height = '50px';\n    this.marginTop = '0';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n  }\n}\n\nclass WarningAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'orange';\n  }\n}\n\nexport { InfoAlert, ErrorAlert, WarningAlert };","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: false,\n    infoText: '',\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({showSuggestions:true});\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText: 'We can not find the city you are looking for. Please try another city',\n      });\n    } else {\n      return this.setState({\n        query: value,\n        suggestions,\n        infoText: '',\n      });\n    }\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false,\n    });\n\n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <label>Search for a city:\n          <input\n            type=\"text\"\n            className=\"city\"\n            placeholder=\"e.g. Toronto, Canada\"\n            value={this.state.query}\n            onChange={this.handleInputChanged}\n            onFocus={() => { this.setState({ showSuggestions: true }) }}\n          />\n        </label>\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li \n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >{suggestion}</li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32,\n    infoText: ''\n  }\n  \n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    if (value < 1 || value > 32) {\n      this.setState({\n        numberOfEvents: '',\n        infoText: 'Please enter a number between 1 and 32',\n      })\n    } else {\n      this.setState({\n        numberOfEvents: value,\n        infoText: '',\n      });\n    }\n    this.props.updateNumberOfEvents(event.target.value);\n  };\n\n  render() {\n    return(\n      <div className=\"numberOfEvents\">\n       <label>Number of events:\n          <input\n            type='text'\n            className='eventsNumber'\n            value={this.state.numberOfEvents}\n            onChange={(e) => this.handleInputChanged(e)}\n          />\n        </label>\n        <ErrorAlert className='ErrorAlert' text={this.state.infoText} />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","const mockData = [\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181161784712000\\\"\",\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:17:46.000Z\",\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\n    \"summary\": \"Learn JavaScript\",\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    \"location\": \"London, UK\",\n    \"creator\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"organizer\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"start\": {\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n     \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n    \"originalStartTime\": {\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n     \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n   },\n   {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181159875584000\\\"\",\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:14:30.000Z\",\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\n    \"summary\": \"React is Fun\",\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    \"location\": \"Berlin, Germany\",\n    \"creator\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"organizer\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"start\": {\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n     \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    \"originalStartTime\": {\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n     \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n  }\n];\n\nexport { mockData };","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\n/**\n * @param {*} events:\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n}\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return mockData;\n  }\n\n  if (!navigator.onLine) {\n    const data = localStorage.getItem(\"lastEvents\");\n    NProgress.done();\n    return data?JSON.parse(data).events:[];;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = `https://9ferqonw30.execute-api.ca-central-1.amazonaws.com/dev/api/get-events/${token}`;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n}\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol + \n      \"//\" + \n      window.location.host + \n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://9ferqonw30.execute-api.ca-central-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n };\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem('access_token');\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get('code');\n    if (!code) {\n      const results = await axios.get('https://9ferqonw30.execute-api.ca-central-1.amazonaws.com/dev/api/get-auth-url');\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}","export default __webpack_public_path__ + \"static/media/logo.d7115c4f.png\";","import React, { Component } from 'react';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport { WarningAlert } from './Alert';\nimport logo from './images/logo.png';\n\nimport './App.css';\nimport './nprogress.css';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    currentLocation: 'all', \n    numberOfEvents: 32,\n    infoText: '',\n  }\n  \n  componentDidMount() { \n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n            events: events.slice(0, this.state.numberOfEvents),\n            locations: extractLocations(events) \n          });\n      } \n      if (!navigator.onLine) {\n        this.setState({\n          infoText: 'Warning! No internet connection. The events displayed may not be up to date '\n        })\n      } else {\n        this.setState({\n          infoText: '',\n        });\n      };\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      let locationEvents = \n        location === 'all'\n        ? events \n        : events.filter((event) => event.location === location);\n      const { numberOfEvents } = this.state; \n      this.setState({\n        events: locationEvents.slice(0, numberOfEvents)\n      });\n    });\n  }\n\n  updateNumberOfEvents = (eventCount) => {\n    const { currentLocation } = this.state;\n    this.setState({\n      numberOfEvents: eventCount\n    });\n    this.updateEvents(currentLocation, eventCount);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <img src={logo} className=\"logo\" alt=\"Meet logo that says 'Let's meet up!'\" />\n        <WarningAlert className=\"WarningAlert\" text={this.state.infoText} />\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateNumberOfEvents={this.updateNumberOfEvents} />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\n\natatus.config('ec5d836b2d954d909417e81d599c9cdb').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}